apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.quay.configBundleSecret.name }}-v2
  namespace: {{ .Values.quay.namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "4"
    argocd.argoproj.io/sync-options: Validate=false
    argocd.argoproj.io/sync-options: ServerSideApply=true
type: Opaque
stringData:
  config.yaml: |
    FEATURE_USER_INITIALIZE: true
    FEATURE_GENERAL_OCI_SUPPORT: true
    BROWSER_API_CALLS_XHR_ONLY: false
    SUPER_USERS:
    - {{ .Values.quay.setup.admin.name }}
    FEATURE_USER_CREATION: true
    ALLOW_PULLS_WITHOUT_STRICT_LOGGING: false
    AUTHENTICATION_TYPE: Database
    DEFAULT_TAG_EXPIRATION: 2w
    ENTERPRISE_LOGO_URL: /static/img/RH_Logo_Quay_Black_UX-
    FEATURE_BUILD_SUPPORT: false
    FEATURE_DIRECT_LOGIN: true
    FEATURE_MAILING: false
    REGISTRY_TITLE: Red Hat Quay
    REGISTRY_TITLE_SHORT: Quay
    TEAM_RESYNC_STALE_TIME: 60m
    TESTING: false
    CREATE_NAMESPACE_ON_PUSH: true
    DISTRIBUTED_STORAGE_CONFIG:
      s3Storage:
        - S3Storage
        - host: '{{ ((lookup "v1" "Secret" "quay-enterprise" "quay-registry-bucket-creds").data.BucketInfo }}'
          s3_access_key: '{{ `{{ index ((lookup "v1" "Secret" "quay-enterprise" "quay-registry-bucket-creds").data.BucketInfo | base64dec | fromJson).spec.secretS3 "accessKeyID" }}` }}'
          s3_secret_key: '{{ `{{ index ((lookup "v1" "Secret" "quay-enterprise" "quay-registry-bucket-creds").data.BucketInfo | base64dec | fromJson).spec.secretS3 "accessSecretKey" }}` }}'
          s3_bucket: '{{ `{{ index ((lookup "v1" "Secret" "quay-enterprise" "quay-registry-bucket-creds").data.BucketInfo | base64dec | fromJson).spec "bucketName" }}` }}'
          storage_path: /datastorage/registry
    DISTRIBUTED_STORAGE_DEFAULT_LOCATIONS: []
    DISTRIBUTED_STORAGE_PREFERENCE:
        - s3Storage

