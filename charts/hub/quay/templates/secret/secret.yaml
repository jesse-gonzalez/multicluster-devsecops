apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.quay.configBundleSecret.name }}-v2
  namespace: {{ .Values.quay.namespace }}
  annotations:
    argocd.argoproj.io/sync-options: Validate=false
    argocd.argoproj.io/compare-options: IgnoreExtraneous
type: Opaque
stringData:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" "quay-enterprise" "quay-registry-bucket-creds") | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $jwtSecret to existing secret data or generate a random one when not exists
  {{- $jwtSecret := (get $secretData "jwt-secret") | default (randAlphaNum 32 | b64enc) }}
  jwt-secret: {{ $jwtSecret | quote }}
  secret.json: |-
    '{{ (lookup "v1" "Secret" "quay-enterprise" "quay-registry-bucket-creds") | fromJson }}'
  ##host: 'index ((lookup "v1" "Secret" "quay-enterprise" "quay-registry-bucket-creds").data.BucketInfo | b64dec | fromJson).spec.secretS3 "endpoint"'
